/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
          PriorityQueue <ListNode> pq = new PriorityQueue<>((a,b) ->{
        return a.val - b.val;
    });


     for(ListNode l : lists)
     {
          if(l != null)
          {
              pq.add(l);
          }
     }
     ListNode dummy = new ListNode (-1);
     ListNode prev = dummy;
     while(pq.size() != 0)
     {
        ListNode curr = pq.remove();
        prev.next = curr;
        prev = prev.next;
        curr = curr.next;
        if(curr != null)
        {
            pq.add(curr);
        }

     }
     return dummy.next;
    }
}
