class Solution {
    public List<Integer> spiralOrder(int[][] arr) {
        List <Integer> list = new ArrayList <> ();
        int minr = 0;
        int minc = 0;
        int m = arr.length,n = arr[0].length;
        int maxr = arr.length - 1;
        int maxc = arr[0].length - 1;
        int tne = m * n;
        int count = 0;
        while(count < tne)
        {
            for(int i = minr,j = minc; j <= maxc && count < tne; j++)
            {
               list.add(arr[i][j]);
                count++;
            }
            minr++;
            for(int i = minr, j = maxc; i <= maxr && count < tne; i++)
            {
                list.add(arr[i][j]);
                count++;
            }
            maxc--;
            for(int i = maxr, j = maxc; j >= minc && count < tne; j--)
            {
                list.add(arr[i][j]);
                count++;
            }
            maxr--;
            for(int i = maxr,j = minc; i >= minr && count < tne; i--)
            {
                list.add(arr[i][j]);
                count++;
            }
            minc++;
        }
      return list;
    }
}
